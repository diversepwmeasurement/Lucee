jobs:
  build:
    env:
      DO_DEPLOY: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/6.1')
        }}
      LUCEE_BUILD_JAVA_VERSION: 21
      LUCEE_TEST_JAVA_VERSION: ''
    runs-on: self-hosted
    services:
      greenmail:
        image: greenmail/standalone:1.6.9
        ports:
        - 3025:3025
        - 3110:3110
        - 3143:3143
        - 3465:3465
        - 3993:3993
        - 3995:3995
        - 8080:8080
      ldap:
        image: rroemhild/test-openldap
        ports:
        - 10389:10389
        - 10636:10636
      redis:
        image: redis
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout
          5s --health-retries 5
        ports:
        - 6379:6379
      sql-server:
        env:
          ACCEPT_EULA: Y
          MSSQL_PID: Express
          SA_PASSWORD: Lucee!1433
        image: mcr.microsoft.com/mssql/server:2019-latest
        options: --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ${SA_PASSWORD}
          -Q 'SELECT 1' || exit 1"  --health-interval 10s --health-timeout 5s --health-retries
          5
        ports:
        - 1433:1433
    steps:
    - continue-on-error: true
      if: ${{ inputs.LUCEE_BUILD_JAVA_VERSION != '' }}
      name: Configure Build Java Version
      run: echo "LUCEE_BUILD_JAVA_VERSION=${{ inputs.LUCEE_BUILD_JAVA_VERSION }}"
        >> $GITHUB_ENV
    - continue-on-error: true
      if: ${{ inputs.LUCEE_TEST_JAVA_VERSION != '' }}
      name: Configure Test Java Version
      run: echo "LUCEE_TEST_JAVA_VERSION=${{ inputs.LUCEE_TEST_JAVA_VERSION }}" >>
        $GITHUB_ENV
    - continue-on-error: true
      uses: szenius/set-timezone@v1.2
      with:
        timezoneLinux: UTC
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      if: ${{ env.LUCEE_TEST_JAVA_VERSION != '' }}
      name: Set up Test Java Version ${{ env.LUCEE_TEST_JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.LUCEE_TEST_JAVA_VERSION }}
    - continue-on-error: true
      if: ${{ env.LUCEE_TEST_JAVA_VERSION != '' }}
      name: Stash Test Java Version Home
      run: echo "LUCEE_TEST_JAVA_EXEC=${{ env.JAVA_HOME }}/bin/java" >> $GITHUB_ENV
    - continue-on-error: true
      if: ${{ env.LUCEE_TEST_JAVA_VERSION != env.LUCEE_BUILD_JAVA_VERSION }}
      name: Set up build JDK '${{ env.LUCEE_BUILD_JAVA_VERSION }}'
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.LUCEE_BUILD_JAVA_VERSION }}
    - continue-on-error: true
      name: Cache Lucee extensions
      uses: actions/cache@v4
      with:
        key: lucee-extensions
        path: ~/work/Lucee/Lucee/cache/
        restore-keys: lucee-extensions
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('loader/pom.xml','core/pom.xml')
          }}
        path: '~/.m2/repository/*

          !~/.m2/repository/org/lucee/lucee/

          '
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Set up MySQL (local)
      run: 'sudo systemctl start mysql

        mysql -e ''CREATE DATABASE lucee'' -uroot -proot

        mysql -e ''CREATE USER "lucee"@"localhost" IDENTIFIED WITH mysql_native_password
        BY "lucee";'' -uroot -proot

        mysql -e ''GRANT ALL PRIVILEGES ON lucee.* TO "lucee"@"localhost"'' -uroot
        -proot

        '
    - continue-on-error: true
      name: Set up Postgres (local)
      run: 'sudo /etc/init.d/postgresql start

        sudo -u postgres psql -c ''create database lucee;''

        sudo -u postgres psql -c "create user lucee with encrypted password ''lucee''";

        sudo -u postgres psql -c ''grant all privileges on database lucee to lucee;''

        '
    - continue-on-error: true
      name: Start MongoDB (docker)
      uses: supercharge/mongodb-github-action@1.6.0
      with:
        mongodb-port: 27017
        mongodb-version: 4.4
    - continue-on-error: true
      name: Setup Memcached (docker)
      uses: niden/actions-memcached@v7
    - continue-on-error: true
      env:
        CI_DEPLOY_PASSPHRASE: ${{ secrets.CI_DEPLOY_PASSPHRASE }}
        CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
        CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
        IMAP_PASSWORD: doesntmatter
        IMAP_PORT_INSECURE: 3143
        IMAP_PORT_SECURE: 3993
        IMAP_SERVER: localhost
        IMAP_USERNAME: lucee
        LDAP_BASE_DN: dc=planetexpress,dc=com
        LDAP_PASSWORD: GoodNewsEveryone
        LDAP_PORT: 10389
        LDAP_PORT_SECURE: 10636
        LDAP_SERVER: localhost
        LDAP_USERNAME: cn=admin,dc=planetexpress,dc=com
        LUCEE_BUILD_FAIL_CONFIGURED_SERVICES_FATAL: true
        LUCEE_DOCKER_FILES_PAT_TOKEN: ${{ secrets.LUCEE_DOCKER_FILES_PAT_TOKEN }}
        MEMCACHED_PORT: 11211
        MEMCACHED_SERVER: localhost
        MONGODB_DATABASE: lucee
        MONGODB_DB: lucee
        MONGODB_PORT: 27017
        MONGODB_SERVER: localhost
        MSSQL_DATABASE: master
        MSSQL_PASSWORD: Lucee!1433
        MSSQL_PORT: 1433
        MSSQL_SERVER: localhost
        MSSQL_USERNAME: sa
        MYSQL_DATABASE: lucee
        MYSQL_PASSWORD: lucee
        MYSQL_PORT: 3306
        MYSQL_SERVER: localhost
        MYSQL_USERNAME: lucee
        POP_PASSWORD: doesntmatter
        POP_PORT_INSECURE: 3110
        POP_PORT_SECURE: 3995
        POP_SERVER: localhost
        POP_USERNAME: lucee
        POSTGRES_DATABASE: lucee
        POSTGRES_PASSWORD: lucee
        POSTGRES_PORT: 5432
        POSTGRES_SERVER: localhost
        POSTGRES_USERNAME: lucee
        REDIS_PORT: 6379
        REDIS_SERVER: localhost
        S3_ACCESS_ID_DOWNLOAD: ${{ secrets.S3_ACCESS_ID_DOWNLOAD }}
        S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_ID_TEST }}
        S3_BUCKET_PREFIX: lucee-ldev-6-
        S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY_TEST }}
        S3_SECRET_KEY_DOWNLOAD: ${{ secrets.S3_SECRET_KEY_DOWNLOAD }}
        SMTP_PASSWORD: doesntmatter
        SMTP_PORT_INSECURE: 3025
        SMTP_PORT_SECURE: 3465
        SMTP_SERVER: localhost
        SMTP_USERNAME: lucee
      name: Build Lucee with Maven
      run: "echo \"-------DO_DEPLOY: ${{ env.DO_DEPLOY }} -------\";\nif [ \"${{ env.DO_DEPLOY\
        \ }}\" == \"true\" ]; then\n  echo \"------- Maven Deploy on ${{ github.event_name\
        \ }} -------\";\n  mvn -B -e -f loader/pom.xml clean deploy --settings travis-settings.xml\
        \ -DtestJavaVersionExec=\"${{ env.LUCEE_TEST_JAVA_EXEC }}\";\nelse\n  echo\
        \ \"------- Maven Install on ${{ github.event_name }} ---------\";\n  mvn\
        \ -B -e -f loader/pom.xml clean install -DtestJavaVersionExec=\"${{ env.LUCEE_TEST_JAVA_EXEC\
        \ }}\"\nfi\n"
    - continue-on-error: true
      id: cleanrefname
      if: always()
      name: clean github.ref_name
      uses: mad9000/actions-find-and-replace-string@5
      with:
        find: /
        replace: '-'
        source: ${{ github.ref_name }}
    - continue-on-error: true
      if: always()
      name: Upload Artifact (junit-test-results)
      uses: actions/upload-artifact@v4
      with:
        name: Lucee-${{ steps.cleanrefname.outputs.value }}-junit-test-results-${{
          github.run_number }}
        path: test/reports/*.xml
    - continue-on-error: true
      name: Remove Lucee build artifacts from local maven cache (avoid growing cache)
      run: 'rm -rfv ~/.m2/repository/org/lucee/lucee/

        '
    - continue-on-error: true
      if: always()
      name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        check_name: Lucee Test Results
        junit_files: test/reports/*.xml
    - continue-on-error: true
      env:
        TRAVIS_JOB_ID: ${{ github.run_id }}
        TRAVIS_TOKEN: ${{ secrets.DOCKER_AUTH_TOKEN }}
      if: ${{ env.DO_DEPLOY == 'true' }}
      name: Trigger Docker Build
      run: 'echo "Trigger Docker Build on Travis https://travis-ci.com/github/lucee/lucee-dockerfiles"

        chmod +x travis-docker-build.sh

        ./travis-docker-build.sh

        '
name: Build 6.0
on:
  repository_dispatch:
    types: trigger-ga___main.yml
